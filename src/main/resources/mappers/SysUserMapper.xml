<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sk.temp.sys.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="cn.sk.temp.sys.pojo.SysUser">
    <constructor>
      <idArg column="u_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="real_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="mobile_phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="salt" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="descri" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="record_status" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    u_id, user_name, password, real_name, sex, email, mobile_phone, salt, descri, record_status,
    update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapCustom">
    select 
    <include refid="Base_Column_List" />
    from tb_sys_user
    where u_id = #{uId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_sys_user
    where u_id = #{uId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.sk.temp.sys.pojo.SysUserCustom" useGeneratedKeys="true" keyProperty="uId">
    insert into tb_sys_user (u_id, user_name, password, 
      real_name, sex, email, 
      mobile_phone, salt, descri, 
      record_status, update_time, create_time
      )
    values (#{uId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, 
      #{mobilePhone,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{descri,jdbcType=VARCHAR}, 
      #{recordStatus,jdbcType=CHAR}, now(), now()
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.sk.temp.sys.pojo.SysUserCustom" useGeneratedKeys="true" keyProperty="uId">
    insert into tb_sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        u_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobilePhone != null">
        mobile_phone,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="descri != null">
        descri,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      update_time,
      create_time,
      <!--<if test="updateTime != null">-->
        <!--update_time,-->
      <!--</if>-->
      <!--<if test="createTime != null">-->
        <!--create_time,-->
      <!--</if>-->
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="descri != null">
        #{descri,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=CHAR},
      </if>
      now(),
      now(),
      <!--<if test="updateTime != null">-->
        <!--now(),-->
      <!--</if>-->
      <!--<if test="createTime != null">-->
        <!--now(),-->
      <!--</if>-->
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sk.temp.sys.pojo.SysUserCustom">
    update tb_sys_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="descri != null">
        descri = #{descri,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=CHAR},
      </if>
      <!--<if test="updateTime != null">-->
        <!--update_time = now(),-->
      <!--</if>-->
      update_time = now(),
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sk.temp.sys.pojo.SysUserCustom">
    update tb_sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      descri = #{descri,jdbcType=VARCHAR},
      record_status = #{recordStatus,jdbcType=CHAR},
      update_time = now(),
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where u_id = #{uId,jdbcType=INTEGER}
  </update>


  <!--以下是自定义的-->

  <!-- 表与实体映射 -->
  <resultMap id="ResultMapCustom" type="cn.sk.temp.sys.pojo.SysUserCustom" extends="BaseResultMap">
    <!--<result property="roleName" column="role_ame" />-->
  </resultMap>

  <!-- 查询条件的sql片段 -->

  <sql id="base_query_condition">
    <if test="null != cdtCustom">
      <!-- ${}拼接字符串，有sql注入的维修，少用-->
      <if test="null != cdtCustom.userName and '' != cdtCustom.userName">
        <if test="isNoLike.userName">
          AND user_name = #{cdtCustom.userName,jdbcType=VARCHAR}
        </if>
        <if test="!isNoLike.userName">
          AND user_name LIKE CONCAT('%',CONCAT(#{cdtCustom.userName,jdbcType=VARCHAR},'%'))
        </if>
      </if>

    </if>
  </sql>

  <!--根据条件查询-->
  <select id="selectListByQueryVo" parameterType="cn.sk.temp.sys.pojo.SysUserQueryVo" resultMap="ResultMapCustom">
    select
    <include refid="Base_Column_List" />
    from tb_sys_user
    <where>
      <!-- 引用sql片段 的id,如果refid指定的id不在本mapper文件中,要前边加namespace -->
      <include refid="base_query_condition"></include>
      AND record_status != '00'
    </where>
    <include refid="cn.sk.temp.base.mapper.IBaseMapper.base_order"/>
  </select>

  <!--根据主键软删除-->
  <update id="deleteInIds">
    update tb_sys_user
    set record_status = #{recordStatus,jdbcType=VARCHAR}
    <where>
      u_id IN
      <foreach collection="pks" open="(" close=")" separator="," item="pk">
        #{pk}
      </foreach>
    </where>
  </update>

  <!--根据主键硬删除-->
  <delete id="realDeleteInIds" >
    delete from tb_sys_user
    <where>
      u_id IN
      <foreach collection="pks" open="(" close=")" separator="," item="pk">
        #{pk}
      </foreach>
    </where>
  </delete>

</mapper>